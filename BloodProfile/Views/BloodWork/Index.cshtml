@model BloodProfile.Models.BloodWorkList
@using Humanizer

@{
    ViewData["Title"] = "Your Blood Work";
}

<div class="panel panel-default todo-panel">
  <div class="panel-heading"><b>@ViewData["Title"]</b></div>

  <table class="table table-hover">
      <thead>
          <tr>
              <td><b>Created Date</b></td>
              <td><b>Exam Date</b></td>
              <td><b>Description</b></td>
              <td></td>
          </tr>
      </thead>

      @foreach (var item in Model.Records)
      {
          <tr>
              <td>@item.DateCreated.Humanize()</td>
              <td>@item.ExamDate.Humanize()</td>
              <td>@item.Description</td>
              <td>
                <input type="button" value="Details" onclick="location.href='@Url.Action("Details", "BloodWork", new { Id = item.Id })'" />
                <input type="button" value="Edit" onclick="location.href='@Url.Action("EditRecord", "BloodWork", new { Id = item.Id })'" />
              </td>
          </tr>
      }
  </table>

  <div>
    <b>Search Blood Works</b>
    <form asp-controller="BloodWork" asp-action="Index" method="get">
      <p>
        Exam Date: From <input type="date" name="StartDate"> To <input type="date" name="EndDate">
        Description: <input type="text" name="SearchString">        
        <input type="submit" value="Filter" />
      </p> 
    </form>
  </div>  

  <hr>

  <div class="panel-footer add-item-form">
    @await Html.PartialAsync("AddRecord", new BloodWork())
  </div>
</div>
